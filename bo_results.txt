{'descrpt': 'BO results after selecting different nu for matern kernel in different input dimensions', 'experiments': [{'hyperparameters': [2.5, 1.5, 0.5, 1.5, 2.5, 2.5, 1.5, 1.5, 1.5], 'random_idx': [2, 1, 0, 1, 2, 2, 1, 1, 1], 'results': [{'run': 1, 'accuracies': [0.3958333333333333, 0.3908333333333333, 0.38916666666666666, 0.38416666666666666, 0.3958333333333333, 0.37833333333333335, 0.35583333333333333, 0.4058333333333333, 0.3725, 0.4008333333333333, 0.4058333333333333, 0.36, 0.3825, 0.37416666666666665, 0.395, 0.395, 0.3441666666666667, 0.41583333333333333, 0.37416666666666665, 0.3883333333333333, 0.4025, 0.37333333333333335, 0.4, 0.4125, 0.39666666666666667], 'best_y': 0.41583333333333333, 'best_candidate': tensor([[0., 0., 0., 0., 0., 0., 0., 0., 0.]], device='cuda:0',
       dtype=torch.float64)}, {'run': 2, 'accuracies': [0.41833333333333333, 0.4008333333333333, 0.4091666666666667, 0.4025, 0.4083333333333333, 0.37916666666666665, 0.38083333333333336, 0.39416666666666667, 0.37666666666666665, 0.4241666666666667, 0.3875, 0.365, 0.3875, 0.37, 0.3566666666666667, 0.39666666666666667, 0.38333333333333336, 0.4041666666666667, 0.405, 0.4, 0.3308333333333333, 0.41, 0.39166666666666666, 0.4, 0.4075], 'best_y': 0.4241666666666667, 'best_candidate': tensor([[0., 0., 0., 0., 0., 0., 0., 0., 0.]], device='cuda:0',
       dtype=torch.float64)}, {'run': 3, 'accuracies': [0.38666666666666666, 0.395, 0.4275, 0.38416666666666666, 0.4041666666666667, 0.3983333333333333, 0.4066666666666667, 0.3983333333333333, 0.405, 0.37666666666666665, 0.36916666666666664, 0.3575, 0.38333333333333336, 0.4033333333333333, 0.3908333333333333, 0.41583333333333333, 0.37, 0.3858333333333333, 0.3825, 0.38083333333333336, 0.4033333333333333, 0.4125, 0.4066666666666667, 0.3925, 0.4091666666666667], 'best_y': 0.4275, 'best_candidate': tensor([[0., 1., 1., 1., 0., 1., 0., 0., 1.]], device='cuda:0',
       dtype=torch.float64)}, {'run': 4, 'accuracies': [0.3925, 0.3958333333333333, 0.38, 0.3983333333333333, 0.395, 0.38916666666666666, 0.385, 0.39416666666666667, 0.4033333333333333, 0.38416666666666666, 0.33, 0.3933333333333333, 0.41, 0.3725, 0.4325, 0.42916666666666664, 0.3775, 0.4, 0.3575, 0.3875, 0.37833333333333335, 0.3883333333333333, 0.41083333333333333, 0.4058333333333333, 0.3958333333333333], 'best_y': 0.4325, 'best_candidate': tensor([[1., 1., 1., 1., 0., 1., 1., 1., 1.]], device='cuda:0',
       dtype=torch.float64)}, {'run': 5, 'accuracies': [0.3875, 0.37416666666666665, 0.38416666666666666, 0.4275, 0.3725, 0.3875, 0.38083333333333336, 0.37583333333333335, 0.37, 0.375, 0.375, 0.3983333333333333, 0.3775, 0.3925, 0.3775, 0.36666666666666664, 0.3975, 0.38083333333333336, 0.39, 0.41083333333333333, 0.4041666666666667, 0.4066666666666667, 0.38416666666666666, 0.3825, 0.4025], 'best_y': 0.4275, 'best_candidate': tensor([[0., 0., 0., 0., 0., 0., 0., 0., 0.]], device='cuda:0',
       dtype=torch.float64)}]}]}