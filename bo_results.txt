{'descrpt': 'BO results after selecting different nu for matern kernel in different input dimensions', 'experiments': [{'hyperparameters': [1.5, 0.5, 1.5, 1.5, 1.5, 0.5, 1.5, 1.5, 1.5], 'random_idx': [1, 0, 1, 1, 1, 0, 1, 1, 1], 'results': [{'run': 1, 'accuracies': [0.345, 0.3925, 0.3491666666666667, 0.41333333333333333, 0.3958333333333333, 0.37083333333333335, 0.38416666666666666, 0.35, 0.38083333333333336, 0.37333333333333335, 0.37833333333333335, 0.3858333333333333, 0.3858333333333333, 0.38166666666666665, 0.37833333333333335, 0.37, 0.37416666666666665, 0.3958333333333333, 0.3475, 0.3491666666666667, 0.3675, 0.39666666666666667, 0.395, 0.34833333333333333, 0.36083333333333334], 'best_y': 0.41333333333333333, 'best_candidate': tensor([[2., 1., 1., 4., 2., 2., 1., 3., 1.]], device='cuda:0',
       dtype=torch.float64)}, {'run': 2, 'accuracies': [0.545, 0.5391666666666667, 0.5283333333333333, 0.5416666666666666, 0.5275, 0.5466666666666666, 0.55, 0.54, 0.545, 0.535, 0.5433333333333333, 0.5275, 0.5408333333333334, 0.53, 0.5358333333333334, 0.5125, 0.5291666666666667, 0.5316666666666666, 0.53, 0.5366666666666666, 0.535, 0.5283333333333333, 0.5225, 0.5466666666666666, 0.5416666666666666], 'best_y': 0.55, 'best_candidate': tensor([[2., 2., 1., 4., 0., 0., 3., 4., 1.]], device='cuda:0',
       dtype=torch.float64)}, {'run': 3, 'accuracies': [0.5025, 0.5116666666666667, 0.5108333333333334, 0.495, 0.4875, 0.5075, 0.505, 0.5033333333333333, 0.49416666666666664, 0.5091666666666667, 0.5066666666666667, 0.49666666666666665, 0.5116666666666667, 0.5091666666666667, 0.48333333333333334, 0.5016666666666667, 0.49, 0.4875, 0.49333333333333335, 0.5008333333333334, 0.515, 0.49083333333333334, 0.5083333333333333, 0.495, 0.49333333333333335], 'best_y': 0.515, 'best_candidate': tensor([[2., 2., 0., 2., 1., 2., 3., 1., 1.]], device='cuda:0',
       dtype=torch.float64)}]}, {'hyperparameters': [2.5, 0.5, 0.5, 2.5, 1.5, 0.5, 0.5, 0.5, 2.5], 'random_idx': [2, 0, 0, 2, 1, 0, 0, 0, 2], 'results': [{'run': 1, 'accuracies': [0.485, 0.5133333333333333, 0.4816666666666667, 0.4716666666666667, 0.5383333333333333, 0.4791666666666667, 0.5008333333333334, 0.48083333333333333, 0.5216666666666666, 0.48833333333333334, 0.5266666666666666, 0.4841666666666667, 0.4675, 0.4975, 0.4975, 0.48083333333333333, 0.4891666666666667, 0.5058333333333334, 0.5016666666666667, 0.5033333333333333, 0.48583333333333334, 0.5183333333333333, 0.5066666666666667, 0.49833333333333335, 0.4625], 'best_y': 0.5383333333333333, 'best_candidate': tensor([[3., 0., 1., 3., 3., 2., 4., 7., 1.]], device='cuda:0',
       dtype=torch.float64)}, {'run': 2, 'accuracies': [0.5383333333333333, 0.57, 0.56, 0.5433333333333333, 0.5491666666666667, 0.56, 0.5633333333333334, 0.555, 0.56, 0.5558333333333333, 0.5366666666666666, 0.5666666666666667, 0.5425, 0.5325, 0.5341666666666667, 0.5208333333333334, 0.5416666666666666, 0.5541666666666667, 0.5575, 0.5633333333333334, 0.5608333333333333, 0.5533333333333333, 0.5416666666666666, 0.5266666666666666, 0.5416666666666666], 'best_y': 0.57, 'best_candidate': tensor([[2., 0., 1., 1., 2., 2., 4., 4., 1.]], device='cuda:0',
       dtype=torch.float64)}, {'run': 3, 'accuracies': [0.5616666666666666, 0.5525, 0.5583333333333333, 0.5733333333333334, 0.5658333333333333, 0.5491666666666667, 0.5583333333333333, 0.56, 0.5675, 0.5466666666666666, 0.5533333333333333, 0.5625, 0.5525, 0.5658333333333333, 0.5625, 0.5575, 0.555, 0.5558333333333333, 0.5741666666666667, 0.5625, 0.5558333333333333, 0.5625, 0.5491666666666667, 0.5675, 0.5533333333333333], 'best_y': 0.5741666666666667, 'best_candidate': tensor([[3., 1., 1., 1., 1., 2., 3., 7., 1.]], device='cuda:0',
       dtype=torch.float64)}]}, {'hyperparameters': [2.5, 0.5, 0.5, 2.5, 1.5, 0.5, 0.5, 0.5, 2.5], 'random_idx': [2, 0, 0, 2, 1, 0, 0, 0, 2], 'results': [{'run': 1, 'accuracies': [0.5308333333333334, 0.535, 0.5358333333333334, 0.5316666666666666, 0.5458333333333333, 0.5433333333333333, 0.5391666666666667, 0.5483333333333333, 0.5366666666666666, 0.5583333333333333, 0.555, 0.545, 0.5616666666666666, 0.555, 0.5283333333333333, 0.5275, 0.5391666666666667, 0.5441666666666667, 0.5425, 0.5183333333333333, 0.545, 0.5516666666666666, 0.535, 0.545, 0.5391666666666667], 'best_y': 0.5616666666666666, 'best_candidate': tensor([[2., 2., 1., 4., 1., 2., 4., 5., 1.]], device='cuda:0',
       dtype=torch.float64)}, {'run': 2, 'accuracies': [0.6091666666666666, 0.5983333333333334, 0.6016666666666667, 0.61, 0.5908333333333333, 0.5916666666666667, 0.6133333333333333, 0.5933333333333334, 0.5975, 0.5975, 0.5975, 0.6016666666666667, 0.595, 0.6025, 0.6133333333333333, 0.5958333333333333, 0.5991666666666666, 0.61, 0.6066666666666667, 0.5991666666666666, 0.5925, 0.6091666666666666, 0.6033333333333334, 0.5966666666666667, 0.6108333333333333], 'best_y': 0.6133333333333333, 'best_candidate': tensor([[3., 1., 1., 3., 1., 0., 0., 8., 0.]], device='cuda:0',
       dtype=torch.float64)}, {'run': 3, 'accuracies': [0.5816666666666667, 0.5783333333333334, 0.5883333333333334, 0.5966666666666667, 0.5841666666666666, 0.5975, 0.5708333333333333, 0.59, 0.5941666666666666, 0.5858333333333333, 0.5975, 0.6041666666666666, 0.5858333333333333, 0.5975, 0.5991666666666666, 0.5908333333333333, 0.5975, 0.5858333333333333, 0.5708333333333333, 0.5758333333333333, 0.5808333333333333, 0.5975, 0.5883333333333334, 0.5983333333333334, 0.5816666666666667], 'best_y': 0.6041666666666666, 'best_candidate': tensor([[3., 1., 0., 4., 1., 2., 4., 8., 0.]], device='cuda:0',
       dtype=torch.float64)}]}, {'hyperparameters': [2.5, 0.5, 0.5, 2.5, 1.5, 0.5, 0.5, 0.5, 2.5], 'random_idx': [2, 0, 0, 2, 1, 0, 0, 0, 2], 'results': [{'run': 1, 'accuracies': [0.56, 0.5733333333333334, 0.6108333333333333, 0.5908333333333333, 0.57, 0.5858333333333333, 0.5833333333333334, 0.6025, 0.5666666666666667, 0.5616666666666666, 0.575, 0.5825, 0.5716666666666667, 0.5883333333333334, 0.5866666666666667, 0.5983333333333334, 0.5708333333333333, 0.5775, 0.5816666666666667, 0.5983333333333334, 0.59, 0.5741666666666667, 0.575, 0.5775, 0.5683333333333334], 'best_y': 0.6108333333333333, 'best_candidate': tensor([[3., 0., 0., 4., 2., 2., 3., 8., 0.]], device='cuda:0',
       dtype=torch.float64)}, {'run': 2, 'accuracies': [0.54, 0.5333333333333333, 0.5333333333333333, 0.5391666666666667, 0.5441666666666667, 0.5525, 0.5416666666666666, 0.5333333333333333, 0.5341666666666667, 0.5291666666666667, 0.5358333333333334, 0.5266666666666666, 0.5266666666666666, 0.5275, 0.5241666666666667, 0.5341666666666667, 0.5333333333333333, 0.5416666666666666, 0.5325, 0.5291666666666667, 0.5158333333333334, 0.5375, 0.5275, 0.53, 0.5133333333333333], 'best_y': 0.5525, 'best_candidate': tensor([[3., 2., 0., 1., 1., 2., 4., 3., 1.]], device='cuda:0',
       dtype=torch.float64)}, {'run': 3, 'accuracies': [0.54, 0.5491666666666667, 0.5575, 0.5566666666666666, 0.5466666666666666, 0.5566666666666666, 0.5475, 0.54, 0.555, 0.5466666666666666, 0.5666666666666667, 0.5475, 0.5508333333333333, 0.5441666666666667, 0.5541666666666667, 0.5525, 0.5433333333333333, 0.5491666666666667, 0.5391666666666667, 0.5391666666666667, 0.54, 0.5358333333333334, 0.5533333333333333, 0.5458333333333333, 0.5416666666666666], 'best_y': 0.5666666666666667, 'best_candidate': tensor([[3., 0., 1., 3., 0., 0., 2., 8., 0.]], device='cuda:0',
       dtype=torch.float64)}]}, {'hyperparameters': [2.5, 0.5, 0.5, 2.5, 1.5, 0.5, 0.5, 0.5, 2.5], 'random_idx': [2, 0, 0, 2, 1, 0, 0, 0, 2], 'results': [{'run': 1, 'accuracies': [0.5758333333333333, 0.565, 0.5375, 0.5675, 0.5766666666666667, 0.5608333333333333, 0.5475, 0.58, 0.5633333333333334, 0.5575, 0.5725, 0.5691666666666667, 0.5716666666666667, 0.5708333333333333, 0.5666666666666667, 0.5791666666666667, 0.5483333333333333, 0.57, 0.5608333333333333, 0.5758333333333333, 0.5733333333333334, 0.5533333333333333, 0.5583333333333333, 0.5758333333333333, 0.545], 'best_y': 0.58, 'best_candidate': tensor([[3., 2., 1., 2., 2., 1., 2., 8., 0.]], device='cuda:0',
       dtype=torch.float64)}, {'run': 2, 'accuracies': [0.5641666666666667, 0.5875, 0.5791666666666667, 0.5833333333333334, 0.5625, 0.5841666666666666, 0.5658333333333333, 0.5566666666666666, 0.5841666666666666, 0.5608333333333333, 0.5666666666666667, 0.5641666666666667, 0.56, 0.5858333333333333, 0.5733333333333334, 0.5675, 0.55, 0.5716666666666667, 0.5658333333333333, 0.5616666666666666, 0.5691666666666667, 0.5725, 0.5933333333333334, 0.58, 0.5925], 'best_y': 0.5933333333333334, 'best_candidate': tensor([[2., 0., 0., 4., 2., 2., 4., 6., 0.]], device='cuda:0',
       dtype=torch.float64)}, {'run': 3, 'accuracies': [0.535, 0.5191666666666667, 0.4891666666666667, 0.48333333333333334, 0.52, 0.5158333333333334, 0.5083333333333333, 0.5116666666666667, 0.4816666666666667, 0.5008333333333334, 0.5116666666666667, 0.5166666666666667, 0.5166666666666667, 0.5158333333333334, 0.49583333333333335, 0.505, 0.4975, 0.5091666666666667, 0.5258333333333334, 0.5183333333333333, 0.5291666666666667, 0.5108333333333334, 0.5016666666666667, 0.47583333333333333, 0.49666666666666665], 'best_y': 0.535, 'best_candidate': tensor([[0., 0., 0., 1., 2., 1., 4., 2., 0.]], device='cuda:0',
       dtype=torch.float64)}]}]}